<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../docbook-xml-4.5/docbookx.dtd"
[
<!ENTITY % manualvariables SYSTEM "manualvariables.mod">
]>
<section id="launch.with.command.line">
  <title id="launch.with.command.line.title">Start OmegaT from the command
  line</title>

  <para>Using the command line allows you to set various options that control or
  modify the behaviour of the application. You can also define and save sets of
  options in scripts that you can then use to launch OmegaT for a particular
  purpose.</para>


  <section id="launch.with.command.line.tutorial">
	<title id="launch.with.command.line.tutorial.title">Very simplified
	overview of the command line</title>

	<para>Before graphical interfaces became common, users interacted with
	computers via a command line interface (CLI), which requires typing
	commands to give instructions to the computer. On modern systems, the
	CLI is accessed through an application generally called a
	&quot;terminal&quot; or &quot;console&quot;. For the sake of simplicity,
	this manual refers to it as the terminal.</para>
	
	<note><para>On Windows, you can use either the <application>Command
	Prompt</application> or <application>Powershell</application> as a
	terminal. Both are available from the <guilabel>System Tools</guilabel>
	folder of the <guilabel>Start Menu</guilabel>. The macOS equivalent is
	the <application>Terminal</application> application located in the
	<filename>Utilities</filename> folder of the
	<filename>Applications</filename> main folder. On Linux, the default
	terminal application for your distribution should be available from the
	application menu or one of its submenus.</para></note>

	<para>In the terminal, you type commands and their associated parameters
	to perform tasks. This makes it easy to perform certain tasks that would
	be difficult to perform using a graphical interface.</para>

	<para>A key concept to remember when using the command line for OmegaT
	is that you typically have to type the full location to the OmegaT
	program on your system as the command, because the system does not know
	where to find it by default. </para>

	<note>
	  <para>The syntax used to specify the location of an application or
	  folder depends on the platform. On Windows, the (<code>\</code>
	  character is used to separate folder and file names, while macOS and
	  Linux the <code>/</code> to do so. The typical default locations for
	  each major platform are presented below.
	  <variablelist>
		<varlistentry id="launch.with.command.line.windows">
		  <term id="launch.with.command.line.windows.title">Windows</term>
		  <listitem>
			<para><filename>C:\Program Files\OmegaT</filename></para>
		  </listitem>
		</varlistentry>
		<varlistentry id="launch.with.command.line.macos">
		  <term id="launch.with.command.line.macos.title">Macos</term>
		  <listitem>
			<para><filename>/Applications/OmegaT</filename></para>
		  </listitem>
		</varlistentry>
		<varlistentry id="launch.with.command.line.linux">
		  <term id="launch.with.command.line.linux.title">Linux</term>
		  <listitem>
			<para><filename>/opt/omegat</filename></para>
		  </listitem>
		</varlistentry>
	  </variablelist>
	  </para>
	</note>	
  </section>

  <section id="launch.with.command.line.omegat.terminal.command.syntax">
	<title
		id="launch.with.command.line.omegat.terminal.command.syntax.title">OmegaT
	terminal command syntax</title>

	<para>The syntax to launch OmegaT from the terminal is:
	<programlisting>java -jar &lt;java parameters&gt; OmegaT.jar &lt;OmegaT parameters&gt; </programlisting></para>
	<para>
	  <variablelist>
		<varlistentry id="launch.with.command.line.java.jar">
		  <term id="launch.with.command.line.java.jar.title">java -jar</term>
		  <listitem>
			<para>This command starts the Java Virtual Machine (JVM)
			and runs the .jar package specified after, OmegaT in
			this example.</para>
		  </listitem>
		</varlistentry>

		<varlistentry id="launch.with.command.line.intro.java.parameters">
		  <term id="launch.with.command.line.intro.java.parameters.title"><emphasis>&lt;java parameters&gt;</emphasis></term>
		  <listitem>
			<para>Optional parameters accepted by the
			<command>java</command> command. The parameters relevant
			to running OmegaT are described <link
			linkend="launch.with.command.line.java.parameters">below</link></para>
		  </listitem>					
		</varlistentry>
		<varlistentry id="launch.with.command.line.intro.omegat.jar">
		  <term id="launch.with.command.line.intro.omegat.jar.title">OmegaT.jar</term>
		  <listitem>
			<para>The OmegaT java executable.</para>
			
		  </listitem>
		</varlistentry>
		<varlistentry id="launch.with.command.line.intro.omegat.parameters">
		  <term id="launch.with.command.line.intro.omegat.parameters.title"><emphasis>&lt;OmegaT parameters&gt;</emphasis></term>
		  <listitem>
			<para>The options specific to OmegaT are described <link
			linkend="launch.with.command.line.omegat.parameters">later
			in this section</link></para>
		  </listitem>					
		</varlistentry>
	  </variablelist>
	</para>
  </section>

  <section id="launch.with.command.line.java.parameters">
	<title id="launch.with.command.line.java.parameters.title">Java
	parameters relevant to OmegaT</title>

	<para>The list below presents parameters for the <command>java</command>
	that can be useful when working with OmegaT.
	<variablelist>
	  <varlistentry id="launch.with.command.line.user.interface.language">
		<term id="launch.with.command.line.user.interface.language.title">User interface language</term>
		<listitem>
		  <para><code>-Duser.country=LL</code></para>
		  <para>Replace <code>LL</code> with the desired
		  two-letter language code from the <ulink
		  url="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO
		  639.1</ulink> list.</para>
		  <para>Using this option will launch OmegaT with the user
		  interface in that language, if available (even
		  partially). If the language is not available, OmegaT
		  defaults to English even if the system uses a different
		  default language.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry id="launch.with.command.line.user.country">
		<term id="launch.with.command.line.user.country.title">User country</term>
		<listitem>
		  <para><code>-Duser.country=CC</code></para>
		  <para>Replace <code>CC</code> with the desired
		  two-letter country code from the <ulink
		  url="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
		  3166-1 alpha-2</ulink> list.</para>
		  <para>This option combines with the previous user
		  interface language parameter to specify a regional
		  variant. If that variant is not available, the user
		  interface follows the same priority as above.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry id="launch.with.command.line.maximum.memory.assignment">
		<term id="launch.with.command.line.maximum.memory.assignment.title">Maximum memory assignment</term>
		<listitem>
		  <para><code>-XmxSIZE</code></para>
		  <para>Replace <code>SIZE</code> is a number of bytes in
		  multiples of 1024 and at least 2Â MB, followed by
		  <code>k</code> for kilobyte, <code>m</code> for
		  megabyte, or <code>g</code> for gigabyte.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry id="launch.with.command.line.proxy.host.ip.address">
		<term id="launch.with.command.line.proxy.host.ip.address.title">Proxy host ip address</term>
		<listitem>
		  <para><code>-Dhttp.proxyHost=.</code></para>
		  <para>Replace <code>.</code> with the IP address of
		  your proxy server, if your system uses one.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry id="launch.with.command.line.proxy.host.port.number">
		<term id="launch.with.command.line.proxy.host.port.number.title">Proxy host port number</term>
		<listitem>
		  <para><code>-Dhttp.proxyPort=.</code></para>
		  <para>Replace <code>.</code> with the port number your
		  system uses to access the proxy server.</para>
		</listitem>
	  </varlistentry>
	  
	  <varlistentry id="launch.with.command.line.google.translate.v.">
		<term id="launch.with.command.line.google.translate.v.title">Google translate v2</term>
		<listitem>
		  <para><code>-Dgoogle.api.key=.</code></para>
		  <para>Replace <code>.</code> with your private Google
		  API key.</para>
		</listitem>
	  </varlistentry>
	  
	  <varlistentry id="launch.with.command.line.microsoft.translator">
		<term id="launch.with.command.line.microsoft.translator.title">Microsoft translator</term>
		<listitem>
		  <itemizedlist>
			<listitem>
			  <para><code>-Dmicrosoft.api.client_id=.</code></para>
			  <para>Replace <code>.</code> with your client ID</para>
			</listitem>
			<listitem>
			  <para><code>-Dmicrosoft.api.client_secret=.</code></para>
			  <para>Replace <code>.</code> with your client secret</para>
			</listitem>
			<listitem>
			  <para>The ID and secret can be found in your
			  account page under Primary account key and
			  Customer-ID.</para>
			</listitem>
		  </itemizedlist>
		</listitem>
	  </varlistentry>

	  <varlistentry id="launch.with.command.line.yandex.translate">
		<term id="launch.with.command.line.yandex.translate.title">Yandex translate</term>
		<listitem>
		  <para><code>-Dyandex.api.key=.</code></para>
		  <para>Replace <code>.</code> with your Yandex
		  Translate API key.</para>
		</listitem>
	  </varlistentry>
	</variablelist>
	</para>

	<note>
	  <para>
		It should go without saying that you must have signed up
		for the appropriate service to use the machine
		translation options.
	  </para>
	</note>
  </section>

  <section id="launch.with.command.line.omegat.parameters">
	<title id="launch.with.command.line.omegat.parameters.title">OmegaT
	options</title>

	<para>You can also get a list of these options in the terminal with the
	<command>java -jar OmegaT.jar <parameter>--help</parameter></command>
	command. The OmegaT GUI is launched if no option is specified.</para>

	<para>		
	  <variablelist>
		<varlistentry id="launch.with.command.line.general.options.">
		  <term id="launch.with.command.line.general.options.title">General options:</term>
		  <listitem>
			<variablelist>
			  <varlistentry id="launch.with.command.line.h.help">
				<term id="launch.with.command.line.h.help.title">-h, --help</term>
				<listitem>
				  <para>Show usage information.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.path.to.an.omegat.project">
				<term id="launch.with.command.line.path.to.an.omegat.project.title">path to an omegat project</term>
				<listitem>
				  <para>Launch the GUI and load the specified
				  project</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.remote.project.">
				<term id="launch.with.command.line.remote.project.title">--remote-project
				<emphasis>&lt;path-to-omegat-project-file&gt;</emphasis></term>
				<listitem>
				  <para>Download the OmegaT project from the
				  specified URL specified in
				  <emphasis>&lt;path-to-omegat-project-file&gt;</emphasis>,
				  and load it.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.no.team">
				<term id="launch.with.command.line.no.team.title">--no-team</term>
				<listitem>
				  <para>Disable team project
				  functionality. Use this option if you want
				  to prevent OmegaT from synchronizing the
				  project contents.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.team.init">
				<term id="launch.with.command.line.team.init.title">team init <emphasis>SL</emphasis>
				<emphasis>TL</emphasis></term>
				<listitem>
				  <para>Initialize a team project using
				  <emphasis>SL</emphasis> and
				  <emphasis>TL</emphasis> as the source and
				  target two-letter language codes,
				  respectively. </para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.disable.project.locking">
				<term id="launch.with.command.line.disable.project.locking.title">--disable-project-locking</term>
				<listitem>
				  <para>Do not lock the omegat.project file.</para>
				  <para>On some platforms, the omegat.project
				  file is locked by default and attempting to
				  open an already open project in another
				  instance of OmegaT results in an error. This
				  option prevents that error.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.disable.location.save">
				<term id="launch.with.command.line.disable.location.save.title">--disable-location-save</term>
				<listitem>
				  <para>Do not remember the last directory
				  opened in the file picker.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.itokenizer.lt.classname.gt.">
				<term id="launch.with.command.line.itokenizer.lt.classname.gt.title">--itokenizer=&lt;classname&gt;</term>
				<term>--ITokenizerTarget=&lt;classname&gt;</term>
				<listitem>
				  <para>Specify a source- or target-language
				  tokenizer (using this option overrides
				  project settings). See
				  OmegaT.jar/META-INF/MANIFEST.MF for valid
				  values.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.config.dir.">
				<term id="launch.with.command.line.config.dir.title">--config-dir=<emphasis>&lt;path&gt;</emphasis></term>
				<listitem>
				  <para>The directory used to read and write
				  OmegaT configuration files.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.config.file.">
				<term id="launch.with.command.line.config.file.title">--config-file=<emphasis>&lt;path&gt;</emphasis></term>
				<listitem>
				  <para>A Java .properties file from which to
				  load default settings.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.resource.bundle.">
				<term id="launch.with.command.line.resource.bundle.title">--resource-bundle=<emphasis>&lt;path&gt;</emphasis></term>
				<listitem>
				  <para>A Java .properties file to use for interface text</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.mode.console.translate.console.pseudotranslatetmx.console.align.">
				<term id="launch.with.command.line.mode.console.translate.console.pseudotranslatetmx.console.align.title">--mode=[console-translate|console-pseudotranslatetmx|console-align]</term>
				<listitem>
				  <para>Specify a mode other than the GUI default.The following
				  options are available:</para>
				  <variablelist>
					<varlistentry id="launch.with.command.line.mode.console.translate">
					  <term id="launch.with.command.line.mode.console.translate.title">--mode=console-translate</term>
					  <listitem>
						<para>In this mode, OmegaT attempts to translate the
						files in the source folder with the available
						translation memories. This is useful if OmegaT is run on
						a server with TMX files automatically fed to a project.
						<variablelist>
						  <varlistentry id="launch.with.command.line.source.pattern.lt.pattern.gt.">
							<term id="launch.with.command.line.source.pattern.lt.pattern.gt.title">--source-pattern=&lt;pattern&gt;</term>
							<listitem>
							  <para>A whitelist of regular expressions defining
							  the source files to process. Remember that in
							  regular expressions, the period and backslash
							  character must be escaped: &quot;\.&quot; and
							  &quot;\\&quot;.</para>
							  <para>Here are some typical examples:
							  <variablelist>
								<varlistentry id="launch.with.command.line.html">
								  <term id="launch.with.command.line.html.title">.*\.html</term>
								  <listitem>
									<para>Translate all HTML files.</para>
								  </listitem>
								</varlistentry>
								<varlistentry id="launch.with.command.line.test.html">
								  <term id="launch.with.command.line.test.html.title">test\.html</term>
								  <listitem>
									<para>Only translate
									<filename>test.html</filename> file in the
									source folder itself. Any files also named
									test.html in other subfolders will be
									ignored.</para>
								  </listitem>
								</varlistentry>
								<varlistentry id="launch.with.command.line.dir.test.html">
								  <term id="launch.with.command.line.dir.test.html.title">dir-10\\test\.html</term>
								  <listitem>
									<para>Only translate the
									<filename>test.html</filename> file in the
									<filename
									class="directory">dir-10</filename>
									folder.</para>
								  </listitem>
								</varlistentry>
							  </variablelist>
							  See <link linkend="appendix.regexp"
							  endterm="appendix.regexp.title"/> for details.
							  </para>
							</listitem>
						  </varlistentry>
						</variablelist>
						</para>
					  </listitem>
					</varlistentry>
				  </variablelist>
				  <variablelist>
					<varlistentry id="launch.with.command.line.mode.console.pseudotranslatetmx">
					  <term id="launch.with.command.line.mode.console.pseudotranslatetmx.title">--mode=console-pseudotranslatetmx</term>
					  <listitem>
						<para>In this mode OmegaT will create a TMX for the
						whole project using only the source files. Specify the
						TMX file to be created with:
						<variablelist>
						  <varlistentry id="launch.with.command.line.pseudotranslatetmx.">
							<term id="launch.with.command.line.pseudotranslatetmx.title">--pseudotranslatetmx=<emphasis>&lt;path&gt;</emphasis></term>
							<listitem>
							  <para>The output pseudotranslated TMX file.</para>
							</listitem>
						  </varlistentry>
						  <varlistentry id="launch.with.command.line.pseudotranslatetype.equal.empty.">
							<term id="launch.with.command.line.pseudotranslatetype.equal.empty.title">--pseudotranslatetype=[equal|empty]</term>
							<listitem>
							  <para>What to fill the pseudotranslated TMX
							  with.</para>
							</listitem>
						  </varlistentry>
						</variablelist>
						</para>
					  </listitem>
					</varlistentry>
				  </variablelist>
				  <variablelist>
					<varlistentry id="launch.with.command.line.mode.console.align">
					  <term id="launch.with.command.line.mode.console.align.title">--mode=console-align
					  <emphasis>--alignDir=<emphasis>&lt;path&gt;</emphasis></emphasis></term>
					  <listitem>
						<para>In this mode, OmegaT will align the files in the
						/source folder of the project with those at the location
						specified by the <emphasis>--alignDir</emphasis>
						parameter. The resulting TMX file is is saved in the
						/omegat folder as align.tmx. The file types that can be
						aligned depend whether alignment is supported by the
						file filter . Supported filters include: ILIAS Language
						File, Java(TM) Resource Bundles, Key=Value Text, Magento
						CE Locale CSV, MoodlePHP, Mozilla DTD, Mozilla FTL, PO,
						RC, SubRip Subtitles, and Windows Resources.</para>
						<para>The <emphasis>--alignDir</emphasis> parameter is
						used to specify the location of the data in the target
						language, which must be a folder containing the
						translated files.</para>
						<para>That folder must contain a translation in the
						target language of the project. For instance, if the
						project is EN-to-FR, the folder must contain a bundle
						ending with _fr. The resulting TMX file is is saved in
						the /omegat folder as align.tmx.</para>
					  </listitem>
					</varlistentry>
				  </variablelist>												
				</listitem>								
			  </varlistentry>
			</variablelist>
		  </listitem>
		</varlistentry>	
		<varlistentry id="launch.with.command.line.non.gui.mode.options.">
		  <term id="launch.with.command.line.non.gui.mode.options.title">Non-gui mode options:</term>
		  <listitem>
			<variablelist>
			  <varlistentry id="launch.with.command.line.quiet">
				<term id="launch.with.command.line.quiet.title">--quiet</term>
				<listitem><para>Minimize the output shown on the command
				line.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.script.">
				<term id="launch.with.command.line.script.title">--script=<emphasis><emphasis>&lt;path&gt;</emphasis></emphasis></term>
				<listitem>
				  <para>A script file to run when a project event is
				  triggered.</para>
				</listitem>
			  </varlistentry>
			  <varlistentry id="launch.with.command.line.tag.validation.abort.warn.">
				<term id="launch.with.command.line.tag.validation.abort.warn.title">--tag-validation=[abort|warn]</term>
				<listitem>
				  <para>Validate tags.
				  <itemizedlist>
					<listitem>
					  <para>Abort: Exit with an error if there are invalid
					  tags.</para>
					</listitem>
					<listitem>
					  <para>Warn: Show warnings without exiting if there are
					  invalid tags.</para>
					</listitem>											
				  </itemizedlist>
				  <note>
					<para>Invalid tags reports are sent output to the terminal
					window.</para>
				  </note>
				  </para>
				</listitem>
			  </varlistentry>
			</variablelist>
		  </listitem>
		</varlistentry>
	  </variablelist>
	</para>
  </section>
</section>
