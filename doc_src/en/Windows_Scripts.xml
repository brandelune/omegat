<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../docbook-xml-4.5/docbookx.dtd">
<section id="windows.scripts">
  <title id="windows.scripts.title">Scripts</title>

  <para>Scripts are short programs (similar to macros in office applications)
  that can be used to automate tasks as well as to extend or customize OmegaT
  functionality. They can be written by users in any language understood by
  the underlying Java virtual machine. OmegaT comes with a number of scripts
  developed by OmegaT contributors. Use the script editor to open, run, or
  modify scripts directly, or to write new scripts for your own use.</para>

  <para>You can access the script editor from the <link
  endterm="menus.tools.scripting.title" linkend="menus.tools.scripting"/>
  command in the <link endterm="menus.tools.title" linkend="menus.tools"/>
  menu.</para>

  <section id="windows.scripts.use">
    <title id="windows.scripts.use.title">Use</title>

    <para>The Scripting window allows you to load an existing script and run
    it on the current opened project.</para>

    <itemizedlist>
      <listitem>
        <para>Simply click the name of a script in the list in the left-hand
        panel to load it into the editor.</para>
      </listitem>

      <listitem>
        <para>Click the <guibutton>Run</guibutton> button at the bottom of the
        window, or press <keycombo><keycap>C</keycap><keycap>R</keycap></keycombo> to launch the script immediately.</para>
      </listitem>

      <listitem>
        <para>If you use a script frequently, you can right-click one of the <guilabel>&lt;1&gt;</guilabel> to <guilabel>&lt;12&gt;</guilabel> buttons at the bottom of the window and select <guilabel>Add Script</guilabel> to assign the script to that number.</para>
      </listitem>

      <listitem>
        <para>You can then left-click on the number to run its assigned script. You can also run an assigned script from the menu by selecting the applicable entry in the <guisubmenu>Tools</guisubmenu> menu or pressing <keycombo> <keycap>C</keycap><keycap>A</keycap><keycap>F#</keycap></keycombo> (the F1 to F12 key corresponding to the assigned number).</para>
      </listitem>
    </itemizedlist>

    <para>By default, scripts are stored in the <filename class="directory">scripts</filename> subfolder of the OmegaT installation folder (the folder that contains the <filename>OmegaT.jar</filename> file).</para>

    <para>New scripts added there will appear in the list of available scripts in the <guilabel>Scripting</guilabel> window.</para>

    <important>
      <para>Depending on the configuration of your operating system, you may not have permission to write to the default scripts folder location.</para>

      <para>In such cases, you will have to copy or move the scripts subfolder to a location for which you do have write permissions, such as the <link endterm="configuration.folder.location.title" linkend="configuration.folder.location"/>, if you want to write your own scripts, add new ones, or modify existing ones.</para>
    </important>

    <warning>
      <para>If you do have permission to write to the default folder, make sure you change the name, or make a backup, of any scripts you modify, as they will be overwritten when OmegaT is updated.</para>
    </warning>

    <para>Additional scripts can be found here: <ulink url="https://sourceforge.net/projects/omegatscripts/">OmegaT Scripts.</ulink></para>
  </section>

  <section id="windows.scripts.distribution">
    <title id="windows.scripts.distribution.title">Scripts distributed with OmegaT</title>

    <para>Follow the instructions provided in the script itself.</para>

    <variablelist>
      <varlistentry>
        <term>Adapt standard tags</term>

        <listitem>
          <para>Adapt standard tags when the Replace with Match command invoked.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Auto Open Last Project</term>

        <listitem>
          <para>Automatically open the last used OmegaT project.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Check Same Segment</term>

        <listitem>
          <para>Check for identical segments (case sensitive)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Currency Translator</term>

        <listitem>
          <para>Translate currencies representation according to the source and target locales.</para>

          <para>This will translate a string like “$123,399.99” to “123 399,99
          USD”, for example.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Example - GUI Scripting</term>

        <listitem>
          <para>Example of GUI scripting</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Example - Key Binding</term>

        <listitem>
          <para>Example of using a keybinding event.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Example - Modify Segment</term>

        <listitem>
          <para>Example showing how to modify a segment.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Example - Search and Replace</term>

        <listitem>
          <para>A simple search and replace script.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>External spellcheck</term>

        <listitem>
          <para>Writes all segments to a file named <filename>[project_name].doc</filename> and opens it in the default word processor for the system. (Note that the file is a plain text file. The <filename>.doc</filename> extension simply ensures it opens in the word processor.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Extract Text Content</term>

        <listitem>
          <para>Extracts the content of the project to a single text file (one line per segment). See <ulink url="https://sourceforge.net/p/omegat/feature-requests/182/">RFE#182 Extracts the content of the projects to text file</ulink></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Non-breaking space</term>

        <listitem>
          <para>Replace spaces with non-breakable spaces where appropriate in French.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Open Current File</term>

        <listitem>
          <para>Open the current source file.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Open Glossary</term>

        <listitem>
          <para>Open the writeable glossary in an editor.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Open Project Folder</term>

        <listitem>
          <para>Open the project folder in the operating system.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Open TM Folder</term>

        <listitem>
          <para>Open the /tm folder.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Open project_save.tmx.</term>

        <listitem>
          <para>Open project_save.tmx in a text editor.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>QA - Check Rules</term>

        <listitem>
          <para>QA script.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>QA - Identical Segments</term>

        <listitem>
          <para>Check for identical segments (case sensitive).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SVN - Cleanup (recursive)</term>

        <listitem>
          <para>Perform SVN cleanup on current project or any folder (recursively).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Show Same Segments</term>

        <listitem>
          <para>Display a list of segments where the source and target have identical content.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Spellcheck</term>

        <listitem>
          <para>Global spell checking.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Strip Bidi Marks</term>

        <listitem>
          <para>Remove bidi mark in the current target or in selection.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Strip tags</term>

        <listitem>
          <para>Remove tags in the current target or selection.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Switch Colour Theme</term>

        <listitem>
          <para>Switch the colour theme used in the editor.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Tag-Free Match</term>

        <listitem>
          <para>Replace current target with a tag-free match.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Tagwipe</term>

        <listitem>
          <para>Remove extraneous tags from docx documents.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>issue_provider_sample.groovy</term>

        <listitem>
          <para>(no description)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>toolbar.groovy</term>

        <listitem>
          <para>(no description)</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="windows.scripts.languages">
    <title id="windows.scripts.languages.title">Scripting languages</title>

    <variablelist>
      <varlistentry>
        <term>Groovy</term>

        <listitem>
          <para>A dynamic language for the Java Virtual machine. It builds upon the strengths of Java, and adds powerful features inspired by languages like Python, Ruby and Smalltalk. See <ulink url="https://groovy-lang.org">Apache Groovy</ulink> for details.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>JavaScript</term>

        <listitem>
          <para>A prototype-based scripting language that is dynamic, weakly typed and has first-class functions. It is a multi-paradigm language that supports the object-oriented, imperative, and functional programming styles. See <ulink
          url="https://developer.oracle.com/databases/nashorn-javascript-part1.html">Practical Nashorn, Part 1: Introducing JavaScript, ECMAScript, and Nashorn</ulink></para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>All languages have access to the OmegaT object model, with the project as the top object. For example, the following Groovy code snippet scans through all segments in every file in the current project and prints out the source and the target text of segments that contain a translation.</para>

    <programlisting>
    files = project.projectFiles;
    for (i in 0 ..&lt; files.size())
    {
        for (j in 0 ..&lt; files[i].entries.size())
        {
            currSegment = files[i].entries[j];
            if (project.getTranslationInfo(currSegment))
            {
                source = currSegment.getSrcText();
                target = project.getTranslationInfo(currSegment).translation;
                console.println(source + " &gt;&gt;&gt;&gt; " + target);
            }     
        }
    }</programlisting>
  </section>
</section>
