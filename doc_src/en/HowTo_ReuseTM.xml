<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../docbook-xml-4.5/docbookx.dtd">
<section id="how.to.reuse.tm">
  <title id="how.to.reuse.tm.title">Reuse Translation Memories</title>

  <para>When a project is initially created, its translation memory, <link
  linkend="project.folder.project.save.tmx.title"
  endterm="project.folder.project.save.tmx.title"/>, is empty. It is gradually
  filled as your translation progresses.</para>

  <para>You can reuse existing translations to speed up this process. If a given
  sentence has already been translated once, there is no need to retranslate
  it. See <link linkend="dialogs.project.properties.auto.propagation"
  endterm="dialogs.project.properties.auto.propagation.title"/> in the <link
  linkend="dialogs.project.properties"
  endterm="dialogs.project.properties.title"/> dialog.</para>

  <para>You can also make use of reference translation memories by putting
  them in the <link linkend="project.folder.tm"
  endterm="project.folder.tm.title"/> folder of your project.</para>

 
  <para>When you use <link linkend="menus.project.create.translated.documents"
  endterm="menus.project.create.translated.documents.title"/> to create the
  target documents for a project, OmegaT also outputs three translation memories
  that reflect the current state of the translation for the files in the source
  folder (see <link
  linkend="dialogs.project.properties.file.locations.exported.tms"
  endterm="dialogs.project.properties.file.locations.exported.tms.title"/>).</para>

  <para>Each of the three files constitutes a bilingual export of the current
  content of your translation. Their content comes the global project memory
  (<link linkend="project.folder.project.save.tmx"
  endterm="project.folder.project.save.tmx.title"/>) but is <emphasis>strictly
  limited</emphasis> to what you have translated so far.</para>

  <para>To reuse translation memories from a previous project you have 2
  options:
  <itemizedlist>
	<listitem><para>Open that old project and put new files in its <link linkend="project.folder.source" endterm="project.folder.source.title"/> folder.</para>
	<para>After reloading that project, all its translation memory will be
	applied to the new source files. That’s the proper method to work on a new
	version of an old already translated document.</para></listitem>
	<listitem><para>Put the reference memories that you took from the old
	project and put them in the <link linkend="project.folder.tm"
	endterm="project.folder.tm.title"/> folder of the new project. Depending on
	how reliable the memory is, you can prefer <link
	linkend="project.folder.tm.enforce"
	endterm="project.folder.tm.enforce.title"/>, <link
	linkend="project.folder.tm.auto" endterm="project.folder.tm.auto.title"/>,
	<link linkend="project.folder.tm.penalty"
	endterm="project.folder.tm.penalty.title"/>, or even <link
	linkend="project.folder.tm.mt" endterm="project.folder.tm.mt.title"/> if it
	comes from machine translation.</para>
</listitem>
  </itemizedlist>
  </para>
  
  <para>You may want to store translation memories in separate folders, by
  client or by specialty so as to be able to reuse them quickly when need
arises. In which case you will just need to use the appropriate folder as the
  <link linkend="dialogs.project.properties.file.locations.translation.memories"
  endterm="dialogs.project.properties.file.locations.translation.memories.title"/>
  of your project.</para>

  <section id="how.to.reuse.tm.importing.and.exporting">
    <title id="how.to.reuse.tm.importing.and.exporting.title">Importing and
    exporting translation memories</title>

    <para>OmegaT can import both levels1 and 2 of TMX versions 1.1 to 1.4b,
    enabling it to read translation memories produced by other tools. However,
    level 2 TMX files (which store formatting information along with the text)
    are not fully supported. OmegaT will still read them and display their
    textual content, but the quality of fuzzy matches will be somewhat
    lower.</para>

    <para>OmegaT follows very strict validation procedures for loading
    translation memory files. If an error is found in a file, OmegaT will
    indicate the line number of that error within the defective file.</para>

    <para>Some tools produce invalid TMX files under certain conditions. You
    will have to fix them if you want to use them as reference memories,
    otherwise OmegaT will report an error and fail to load them. Fixes are
    generally simple, and the error message provided by OmegaT will help you
    pinpoint the error. You can also ask the user group for advice if you have
    problems.</para>

    <para>OmegaT exports both level 1 and level 2 version 1.4 TMX
    files. Although the level 2 export is not fully compliant with the standard,
    it is sufficiently close, and will generate correct matches in other
    translation memory tools that supporting such files. If you only need
    textual information (without formatting information), use the level 1 file
    produced by OmegaT.</para>
  </section>

  <section id="how.to.reuse.tm.creating.a.tm.for.selected.documents">
    <title
    id="how.to.reuse.tm.creating.a.tm.for.selected.documents.title">Creating a
    translation memory specific to selected documents</title>

    <para>In situations where a translator needs to share a TMX that contain
    only the text from certain specific files and excludes other content,
    sharing the complete <filename>ProjectName-omegat.tmx</filename> is not
    possible. The following procedure presents one way of doing so that is
    simple to follow and does endanger any of the resources in the
    project.</para>

    <itemizedlist>
      <listitem>
        <para>Create a new completely separate project in the desired language
        pair and give it an appropriate name. Remember that by default, the
        generated TMX files will include that name.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Copy the documents for which you want to create a translation
        memory into the <filename class="directory">source</filename> folder of
        this new project.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Copy the translation memories with the translations those
        documents above into <filename class="directory">tm/auto</filename>
        subfolder of the new project.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Open the project. Use
        <keycombo><keycap>C</keycap><keycap>T</keycap></keycombo> to check for
        possible tag errors, and
        <keycombo><keycap>C</keycap><keycap>U</keycap></keycombo> to find any
        untranslated segments. Finally, press
        <keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo> to create
        the TMX files for export along with the target documents. You can also
        check the contents of the latter to make sure everything worked as
        expected.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>The TMX files in the main project folder (see above) now contain
        only the original and translated text, in the selected language pair, of
        the files you copied into the source folder. Copy them to a safe place
        for future reference.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Delete the project folder, or archive it outside your main working
        folder, to avoid accidentally reusing that project and possibly
        polluting future TMX files.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="how.to.reuse.tm.sharing.translation.memories">
    <title id="how.to.reuse.tm.sharing.translation.memories.title">Sharing
    translation memories</title>

    <para>For large jobs involving a team of translators, it is easier for
    everyone involved to share common translation memories rather than pass
    local versions back and forth.</para>

    <para>OmegaT is capable of interfacing with SVN and Git, two common version
    control systems (VCS) that are offered under an open source license. The
    chosen VCS manages the entire OmegaT project folder—which means the
    translation memories it includes, as well as the source and other
    subfolders, project settings, and so on. Refer to the <link
    linkend="how.to.setup.team.project"
    endterm="how.to.setup.team.project.title"/> and <link
    linkend="how.to.use.team.project" endterm="how.to.use.team.project.title"/>
    sections of this chapter for more information.</para>
  </section>

  <section id="how.to.reuse.tm.using.tmx.with.alternative.languages">
    <title id="how.to.reuse.tm.using.tmx.with.alternative.languages.title">Using
    TMX with an alternative language</title>

    <para>Some projects may require the same source text to be translated in
    more than one language. For example, you may have translated a Dutch text to
    English. However, you also need a translation to Chinese, but you cannot
    find a Chinese translator who understands Dutch. You do, however, know one
    who understands English perfectly. In this case, you can use the NL-EN
    translation memory as a go-between to produce an NL to ZH
    translation.</para>

    <para>To do so, create a subfolder called <filename
    class="directory">tmx2source</filename> in the <filename
    class="directory">tm</filename> subfolder, copy your NL-EN translation
    memory file to the newly created <filename
    class="directory">tm/tmx2source/</filename> subfolder, and rename it
    <filename>ZH_CN.tmx</filename> to indicate the target language of the
    tmx. The translator will be see the English translation under the Dutch
    source segments, and use it to create the Chinese translation.</para>

    <para><emphasis role="bold">Important: </emphasis>the intermediate TMX must
    be renamed <filename>XX_YY.tmx</filename>, where <emphasis>XX_YY</emphasis>
    represents the target language for that translation memory
    (<filename>ZH_CN.tmx</filename>in the above example). The source languages
    of the project and TMX file should, of course, be identical (NL in this
    example). Note that only one TMX file can be used for any given language
    pair. If you need to use several translation memories in that pair, you will
    have to merge them all into a single <filename>XX_YY.tmx</filename>
    file.</para>
  </section>
</section>
